// Code generated by mockery v2.22.1. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// Cookie is an autogenerated mock type for the Cookie type
type Cookie struct {
	mock.Mock
}

// DeleteCookie provides a mock function with given fields: c
func (_m *Cookie) DeleteCookie(c *gin.Context) {
	_m.Called(c)
}

// GetCookie provides a mock function with given fields: c
func (_m *Cookie) GetCookie(c *gin.Context) (string, error) {
	ret := _m.Called(c)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(*gin.Context) (string, error)); ok {
		return rf(c)
	}
	if rf, ok := ret.Get(0).(func(*gin.Context) string); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(*gin.Context) error); ok {
		r1 = rf(c)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetCookie provides a mock function with given fields: c, session
func (_m *Cookie) SetCookie(c *gin.Context, session string) {
	_m.Called(c, session)
}

type mockConstructorTestingTNewCookie interface {
	mock.TestingT
	Cleanup(func())
}

// NewCookie creates a new instance of Cookie. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCookie(t mockConstructorTestingTNewCookie) *Cookie {
	mock := &Cookie{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
